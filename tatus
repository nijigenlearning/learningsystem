[1mdiff --git a/src/app/materials/[id]/images/page.tsx b/src/app/materials/[id]/images/page.tsx[m
[1mindex ce1f95d..9ef1edb 100644[m
[1m--- a/src/app/materials/[id]/images/page.tsx[m
[1m+++ b/src/app/materials/[id]/images/page.tsx[m
[36m@@ -96,9 +96,11 @@[m [mexport default function ImagesEditPage() {[m
           // UI step index と database step_number のマッピングを作成[m
           const mapping = new Map<number, number>();[m
           let uiIndex = 0;[m
[32m+[m[32m          let actualStepNumber = 1; // 実際の手順番号（小見出しを除く）[m
           stepsData.forEach((step: RecipeStep) => {[m
             if (!step.heading) { // 小見出しでない場合のみマッピングに追加[m
[31m-              mapping.set(uiIndex, step.step_number);[m
[32m+[m[32m              mapping.set(uiIndex, actualStepNumber);[m
[32m+[m[32m              actualStepNumber++;[m
             }[m
             uiIndex++;[m
           });[m
[36m@@ -111,17 +113,19 @@[m [mexport default function ImagesEditPage() {[m
         // 各手順の画像を取得[m
         const stepImagesData: StepImage[] = [];[m
         for (const step of stepsData) {[m
[31m-          const { data: images } = await supabase[m
[31m-            .from('material_images')[m
[31m-            .select('*')[m
[31m-            .eq('material_id', materialId)[m
[31m-            .eq('step_id', step.step_number)[m
[31m-            .order('order', { ascending: true });[m
[31m-          [m
[31m-          stepImagesData.push({[m
[31m-            stepId: step.step_number,[m
[31m-            images: images || [][m
[31m-          });[m
[32m+[m[32m          if (!step.heading) { // 小見出しでない場合のみ画像を取得[m
[32m+[m[32m            const { data: images } = await supabase[m
[32m+[m[32m              .from('material_images')[m
[32m+[m[32m              .select('*')[m
[32m+[m[32m              .eq('material_id', materialId)[m
[32m+[m[32m              .eq('step_id', step.step_number)[m
[32m+[m[32m              .order('order', { ascending: true });[m
[32m+[m[41m            [m
[32m+[m[32m            stepImagesData.push({[m
[32m+[m[32m              stepId: step.step_number, // データベースのstep_numberを使用[m
[32m+[m[32m              images: images || [][m
[32m+[m[32m            });[m
[32m+[m[32m          }[m
         }[m
         setStepImages(stepImagesData);[m
       } else {[m
